[user]
    name = R. Stephens Summerlin
    email = Robert.Summerlin@gtri.gatech.edu
[core]
    editor = vim
    autocrlf = input
[merge]
    tool = vimdiff
    conflictstyle = diff3
[log]
    date = relative
[blame]
    date = relative
[status]
    submoduleSummary = true
[format]
    pretty = format:%C(yellow)%h %Cblue%>(14)%ar %Cgreen%<(7)%aN%Cred%d %Creset%<(120,trunc)%s
[diff]
    #external = ~/.git-bins/git_diff_wrapper
    tool = vimdiff
    submodule = log
[push]
    default = upstream
    recurseSubmodules = check
[color]
    ui = always
[mergetool "extMerge"]
    trustExitCode = true
[alias]
    co = checkout
    br = branch
    bra = branch -vva
    ci = commit
    sb = show-branch
    st = status
    dd = diff --diff-filter=d
    rs = reset --mixed HEAD --
    lg = log --graph
    lc = log @{u}.. # This displays local commits
    last = log -1 HEAD
    diffc = diff --cached
    alias = config --get-regexp ^alias\\.
    rinfo = remote show origin
    modup = submodule update --recursive
    rbinfo-merged = !~/.git-bins/rbrinfo-merged
    rbinfo-not-merged = !~/.git-bins/rbrinfo-not-merged
    binfo-merged = !~/.git-bins/brinfo-merged
    binfo-not-merged = !~/.git-bins/brinfo-not-merged
    binfo = "!r() { cur=$(git rev-parse --abbrev-ref HEAD); git for-each-ref --sort=-committerdate refs/heads/ --format='%(color:yellow)%(refname:short)|%(color:red)%(objectname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | sed \"s/m${cur}|/m* ${cur}|/\" | column -ts'|'; }; r"
    rbinfo = "!r() { cur=$(git rev-parse --abbrev-ref HEAD); git for-each-ref --sort=-committerdate refs/remotes/ --format='%(color:yellow)%(refname:short)|%(color:red)%(objectname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | sed \"s/m${cur}|/m* ${cur}|/\" | column -ts'|'; }; r"
    abinfo = "!r() { cur=$(git rev-parse --abbrev-ref HEAD); git for-each-ref --sort=-committerdate refs/remotes/ refs/heads/ --format='%(color:yellow)%(refname:short)|%(color:red)%(objectname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | sed \"s/m${cur}|/m* ${cur}|/\" | column -ts'|'; }; r"
    d = difftool
    apply-gitignore = !git ls-files -ci --exclude-standard -z | xargs -0r git rm --cached
    fixup = !sh -c 'REV=$(git rev-parse $1) && git commit --fixup $@ && git rebase -i --autosquash $REV^' -
    squash = !sh -c 'REV=$(git rev-parse $1) && git commit --squash $@ && git rebase -i --autosquash $REV^' -
    ec = config --global -e
    up = !git pull --rebase --prune $@ && git submodule update --init --recursive
    cob = checkout -b
    cm = commit -m
    save = !git add -A && git commit -m "SAVEPOINT"
    cam = commit -am
    ap = add -p
    wip = !git add -u && git commit -m "WIP"
    undo = reset HEAD~1 --mixed
    amend = commit -a --amend
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
    bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
    bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
    linearize = filter-branch --parent-filter 'cut -f 2,3 -d " "'
[difftool]
    prompt = false
